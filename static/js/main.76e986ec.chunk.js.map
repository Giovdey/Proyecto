{"version":3,"sources":["components/AddCategory.js","components/FilmInfoItemFav.js","helpers/getFilmInfo.js","components/FilmGridFav.js","components/Favoritos.js","components/FilmGridItem.js","helpers/getFilm.js","components/FilmGrid.js","hooks/useFetchFilm.js","components/FilmInfoItem.js","components/FilmInfo.js","FilmSearchApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","class","type","placeholder","value","onChange","e","target","onClick","preventDefault","length","cats","protoTypes","PropTypes","func","isRequired","FilmInfoItemFav","Title","Year","Poster","imdbID","addFavouriteMovie","Heart","localStorage","getItem","includes","src","alt","className","href","getFilmInfo","a","url","fetch","resp","json","data","filminfo","Rated","Released","Tiempo","Runtime","Genre","Director","Writer","Actors","Plot","Language","Country","Awards","FilmGridFav","category","info","setInfo","console","log","useEffect","then","Favoritos","movie","setMovie","movieFavourites","JSON","parse","map","FilmGridItem","getFilm","film","Search","FilmGrid","loading","state","setState","setTimeout","useFetchFilm","poster","FilmInfoItem","FilmInfo","id","useParams","FilmSearchApp","categories","favourites","setFavourites","items","newFavouriteList","isFavourite","indexOf","splice","push","setItem","stringify","path","element","role","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76e986ec.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue,setInputValue]=useState('')\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.length>2){\r\n            setCategories(cats=>[inputValue]);\r\n            setInputValue('');\r\n        }\r\n       \r\n    }\r\n    return (\r\n        \r\n        <form  >\r\n            \r\n            <input\r\n                class=\"form-control mr-sm-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            <button class=\"btn btn-success \" type=\"submit\" onClick={handleSubmit}>Search</button>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.protoTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const FilmInfoItemFav = ({Title,Year,Poster,imdbID,addFavouriteMovie,Heart}) => {\r\n    \r\n    const Fav=localStorage.getItem('react-movie-app-favourites');\r\n    const Whiteheart='ü§ç';\r\n    const Blackheart='üñ§';\r\n    Heart=Fav.includes(imdbID) ? Blackheart:Whiteheart\r\n    //jdjfjfk\r\n    return (\r\n        \r\n        <div class=\"card\" >\r\n            <img src={Poster} class=\"card-img-top\" alt={Title}/>\r\n            <div className='overlay d-flex align-items-center justify-conten'></div>\r\n            <p class=\"card-title\" >{Title}</p>\r\n            <p class=\"card-subtitle mb-2 text-muted\">{Year}</p>\r\n            <i class=\"bi bi-bookmark-heart\" onClick={()=>addFavouriteMovie(imdbID)}>{Heart}</i>\r\n            <a class=\"btn btn-primary\" href={`/Proyecto/FilmInfo/${imdbID}`}>+Info</a>\r\n            \r\n        {/* <Favoritos\r\n             movies={movies}\r\n             handleFavouritesClick={addFavouriteMovie}\r\n                \r\n        /> */}\r\n        </div>\r\n    )\r\n  };\r\n  ","export const getFilmInfo=async(imdbID)=>{\r\n    \r\n    const url=`http://www.omdbapi.com/?i=${imdbID}&apikey=f277de14`;\r\n    const resp= await fetch(url);\r\n    const data= await resp.json();\r\n    \r\n    const filminfo=()=>{\r\n        return{\r\n            Title: data.Title,\r\n            Year: data.Year,\r\n            Rated: data.Rated,\r\n            Released: data.Released,\r\n            Tiempo: data.Runtime,\r\n            Genre: data.Genre,\r\n            Director:data.Director,\r\n            Writer:data.Writer,\r\n            Actors:data.Actors,\r\n            Plot: data.Plot,\r\n            Language:data.Language,\r\n            Country:data.Country,\r\n            Awards:data.Awards,\r\n            Poster: data.Poster,\r\n            imdbID: data.imdbID\r\n            \r\n        }\r\n    };\r\n    return filminfo;\r\n}","import React,{useState,useEffect} from 'react';\r\nimport { FilmInfoItemFav } from './FilmInfoItemFav';\r\nimport { getFilmInfo } from '../helpers/getFilmInfo';\r\nexport const FilmGridFav = ({category,Heart,addFavouriteMovie}) => {\r\n    const [info, setInfo] = useState([]);  \r\n    console.log(category);\r\n    useEffect(() => {\r\n      getFilmInfo(category)\r\n            .then(setInfo);\r\n    \r\n    }, []);\r\n  return (\r\n    <div >\r\n    {\r\n        <FilmInfoItemFav\r\n                key={info.Title}\r\n                {...info}\r\n                Heart={Heart}\r\n                addFavouriteMovie={addFavouriteMovie}\r\n                \r\n            />\r\n        \r\n    }\r\n    </div>\r\n  );\r\n};\r\n","\r\nimport React,{useState,useEffect} from 'react';\r\nimport { FilmGridFav } from './FilmGridFav';\r\nexport const Favoritos = ({addFavouriteMovie}) => {\r\n   \r\n    const [movie, setMovie] = useState([]);\r\n    \t\r\n    useEffect(() => {\r\n\t\tconst movieFavourites = JSON.parse(\r\n\t\t\tlocalStorage.getItem('react-movie-app-favourites')\r\n\t\t);\r\n      \r\n\t\tif (movieFavourites) {\r\n\t\t\tsetMovie(movieFavourites);\r\n\t\t}\r\n\t}, []);\r\n    \r\n    console.log(movie);\r\n    const Heart='ü§ç';\r\n    return(\r\n        \r\n        <div>\r\n            \r\n            <ol>\r\n                {\r\n                    movie.map((category)=>(\r\n                        <FilmGridFav\r\n                            key={category}\r\n                            category={ category }\r\n                            Heart={Heart}\r\n                            addFavouriteMovie={addFavouriteMovie}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n          \r\n            </div>\r\n        \r\n       \r\n\r\n    )\r\n    \r\n}\r\n","import React,{useState} from 'react'\r\nimport { Favoritos } from './Favoritos';\r\n\r\n\r\nexport const FilmGridItem = ({Title,Year,Poster,imdbID,addFavouriteMovie,Heart}) => {\r\n\r\n    \r\n    const Fav=localStorage.getItem('react-movie-app-favourites');\r\n    const Whiteheart='ü§ç';\r\n    const Blackheart='üñ§';\r\n    Heart=Fav.includes(imdbID) ? Blackheart:Whiteheart\r\n    return (\r\n        \r\n        \r\n        <div class=\"card\" >\r\n        \r\n            <img src={Poster} class=\"card-img-top\" alt={Title}/>\r\n            <div className='overlay d-flex align-items-center justify-conten'></div>\r\n            <p class=\"card-title\" >{Title}</p>\r\n            <p class=\"card-subtitle mb-2 text-muted\">{Year}</p>\r\n            <i class=\"bi bi-bookmark-heart\" onClick={()=>addFavouriteMovie(imdbID)}>{Heart}</i>\r\n            <a class=\"btn btn-primary\"  href={`/Proyecto/FilmInfo/${imdbID}`}>+Info</a>\r\n            \r\n            \r\n            {/* <Favoritos\r\n                 movies={movies}\r\n                 handleFavouritesClick={addFavouriteMovie}\r\n\t\t\t\t\t\r\n            /> */}\r\n\r\n        </div>\r\n       \r\n    )\r\n}\r\n","export const getFilm=async(category)=>{\r\n    \r\n    const url=`http://www.omdbapi.com/?s=${category}&apikey=f277de14`;\r\n    const resp= await fetch(url);\r\n    const data= await resp.json();\r\n    \r\n    const film= data.Search.map((movie)=>{\r\n        return{\r\n            \r\n            Title: movie.Title,\r\n            Year: movie.Year,\r\n            Poster: movie.Poster,\r\n            imdbID: movie.imdbID\r\n        }\r\n    });\r\n    return film;\r\n}","import React,{useState} from 'react'\r\nimport { FilmGridItem } from './FilmGridItem';\r\nimport { useFetchFilm } from '../hooks/useFetchFilm';\r\n\r\n\r\nexport const FilmGrid = ({category,addFavouriteMovie,Heart}) => {\r\n\r\n    console.log(category);\r\n    const {data: poster, loading} =useFetchFilm(category);\r\n\r\n    // const [favourites, setFavourites] = useState([]);\r\n\r\n    // const saveToLocalStorage = (items) => {\r\n\t// \tlocalStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\r\n\t// };\r\n    // const addFavouriteMovie = (Title) => {\r\n\t// \tconst newFavouriteList = [...favourites, {title:Title}];\r\n    //     console.log(newFavouriteList)\r\n        \r\n\t// \tsetFavourites(newFavouriteList);\r\n    //     saveToLocalStorage(newFavouriteList);\r\n\t// };\r\n  \r\n    return (\r\n        <>\r\n            {/* <h3 class='card animate__animated animate__fadeIn'>{ category }</h3> */}\r\n            {loading&& <p class='card animate__animated animate__flash'>Loading...</p>}\r\n            <div className='cardGrid '>\r\n                {\r\n                    poster.map((movie)=>(\r\n                        <FilmGridItem\r\n                            key={movie.Title}\r\n                            {...movie}\r\n                            addFavouriteMovie={addFavouriteMovie}\r\n                            \r\n                            Heart={Heart}\r\n                        />\r\n                        \r\n                        \r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\";\r\nimport { getFilm } from \"../helpers/getFilm\";\r\n\r\nexport const useFetchFilm = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        getFilm(category)\r\n                .then(movie=>{\r\n                    setTimeout(()=>{\r\n                        \r\n                        setState({\r\n                            data:movie,\r\n                            loading: false\r\n                        })\r\n                    },1000);\r\n                });\r\n\r\n    },[category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport const FilmInfoItem = ({Title,Year,Rated,Released,Tiempo,Genre,Director,Writer,Actors,Plot,Language,Country,Awards,Poster}) => {\r\n  return (\r\n    <ul class=\"list-unstyled\">\r\n        <li class=\"media\">\r\n            <img src={Poster} class=\"img-thumbnail\" alt={Title}/>\r\n            <div class=\"media-body\">\r\n                <h5 class=\"mt-0 mb-1\">{Title}</h5>\r\n                <h6>Year: {Year}</h6>\r\n                <h6>Rated: {Rated}</h6>\r\n                <h6>Released: {Released}</h6>\r\n                <h6>Tiempo: {Tiempo}</h6>\r\n                <h6>Genre: {Genre}</h6>\r\n                <h6>Director: {Director}</h6>\r\n                <h6>Writer: {Writer}</h6>\r\n                <h6>Actors:{Actors}</h6>\r\n                <h6>Language: {Language}</h6>\r\n                <h6>Country: {Country}</h6>\r\n                <h6>Awards: {Awards}</h6>\r\n                <p>Plot: {Plot}</p>\r\n            </div>\r\n        </li>\r\n    </ul> \r\n  )\r\n};\r\n","import React,{useState,useEffect}from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {getFilmInfo} from '../helpers/getFilmInfo'\r\nimport { FilmInfoItem } from './FilmInfoItem';\r\n\r\nexport const FilmInfo = () => {\r\n  \r\n    const{id}=useParams();\r\n    const [info, setInfo] = useState([]);  \r\n    useEffect(() => {\r\n      getFilmInfo(id)\r\n            .then(setInfo);\r\n    \r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n           <div >\r\n                {\r\n                    <FilmInfoItem\r\n                            key={info.Title}\r\n                            {...info}\r\n                            \r\n                        />\r\n                    \r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React,{useState,useEffect} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { FilmGrid } from './components/FilmGrid';\r\nimport { BrowserRouter,Route,Routes} from 'react-router-dom';\r\nimport{Favoritos} from'./components/Favoritos';\r\nimport { FilmInfo } from './components/FilmInfo';\r\n\r\n\r\nexport const FilmSearchApp = () => {\r\n    \r\n    const [categories,setCategories]= \r\n                        useState([]);\r\n       \r\n                        \r\n    const [favourites, setFavourites] = useState([]);\r\n\r\n    const saveToLocalStorage = (items) => {\r\n\t\tlocalStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\r\n\t};\r\n    const addFavouriteMovie = (Title) => {\r\n      \r\n\t\tconst newFavouriteList = [...favourites];\r\n    const isFavourite=newFavouriteList.indexOf(Title);\r\n    if(isFavourite>=0)\r\n    {\r\n      console.log(isFavourite);\r\n      newFavouriteList.splice(isFavourite,1);\r\n    }\r\n    else{\r\n      \r\n      newFavouriteList.push(Title);\r\n    }\r\n       \r\n        \r\n\t\tsetFavourites(newFavouriteList);\r\n        saveToLocalStorage(newFavouriteList);\r\n\t};\r\n  \r\n\t  const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n\t\tconst movieFavourites = JSON.parse(\r\n\t\t\tlocalStorage.getItem('react-movie-app-favourites')\r\n\t\t);\r\n      \r\n\t\tif (movieFavourites) {\r\n\t\t\tsetMovie(movieFavourites);\r\n\t\t}\r\n\t}, []);\r\n  \r\n    const Heart='ü§ç';\r\n\r\n    return (\r\n      \r\n      <BrowserRouter>\r\n      \r\n        <div>\r\n            <div class=\"navbar navbar-expand-lg navbar-dark bg-dark\" >\r\n            <a class=\"navbar-brand\" href=\"#\">Film App</a>\r\n            <ul class=\"navbar-nav mr-auto\">\r\n                <li class=\"nav-item active\">\r\n                  <a class=\"nav-link\" href=\"/Proyecto\">Home <span class=\"sr-only\">(current)</span></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" href=\"/Proyecto/Favoritos\">Favoritos</a>\r\n                  \r\n                </li>\r\n                \r\n                \r\n            </ul>\r\n            \r\n            <form class=\"form-inline my-2 my-lg-0\">\r\n              <AddCategory setCategories={setCategories}/>\r\n              \r\n            </form>\r\n            </div>\r\n            <Routes >\r\n              <Route path=\"/Proyecto\" element={\r\n                <div>\r\n                  \r\n                  \r\n                <hr/>\r\n                {\r\n                  categories.length==0?\r\n                  (\r\n                    <div class=\"alert alert-secondary\" role=\"alert\">\r\n                    Ingrese el nombre de la Pelicula que desea :D\r\n                    </div>\r\n\r\n                  )\r\n                  :\r\n                  (\r\n                    <ol>\r\n                    {\r\n                        categories.map((category)=>(\r\n                            <FilmGrid\r\n                                key={category}\r\n                                category={ category }\r\n                                addFavouriteMovie={addFavouriteMovie}\r\n                                Heart={Heart}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n                  )\r\n                }\r\n                \r\n                \r\n                </div>\r\n                \r\n                \r\n              }>\r\n\r\n              </Route>\r\n              <Route path=\"/Proyecto/Favoritos/\" element={<Favoritos addFavouriteMovie={addFavouriteMovie}/>\r\n                // <ol>\r\n                //     {\r\n                //         movie.map((category)=>(\r\n                //             <h1>{category.title}</h1>\r\n                //         ))\r\n                //     }\r\n                // </ol>\r\n              }>\r\n              </Route>\r\n              <Route path=\"/Proyecto/FilmInfo/:id\" element={<FilmInfo/>}>\r\n              </Route> \r\n            \r\n            </Routes>\r\n            \r\n        </div>\r\n      \r\n      </BrowserRouter>\r\n      \r\n        \r\n    )\r\n    \r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { FilmSearchApp } from './FilmSearchApp';\n\nReactDOM.render(\n    <FilmSearchApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}